{"ast":null,"code":"var _jsxFileName = \"D:\\\\new react course\\\\01-starting-project\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer, useContext } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from '../../store/auth-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  });\n  useEffect(() => {\n    console.log('EFFECT RUNNING');\n    return () => {\n      console.log('EFFECT CLEANUP !!!');\n    };\n  }, []);\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordIsValid\n  } = passwordState;\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log('checking Form Availability !!');\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n    return () => {\n      console.log('CLEANUP');\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n    setFormIsValid(event.target.value.includes('@') && passwordState.isValid);\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n    setFormIsValid(event.target.value.trim().length > 6 && emailState.value.isValid);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    authCtx.onLogin(emailState.value, passwordState.value);\n  };\n\n  const authCtx = useContext(AuthContext);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"IiAWeIzDIT3ShI2ltGqk/quYK9s=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/new react course/01-starting-project/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","useContext","Card","classes","Button","AuthContext","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","console","log","emailIsValid","passwordIsValid","identifier","setTimeout","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","authCtx","onLogin","login","control","invalid","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState,useEffect , useReducer,useContext} from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from '../../store/auth-context';\n\nconst emailReducer = (state, action) => {\n  if(action.type === 'USER_INPUT') {\n    return { value:action.val , isValid : action.val.includes('@')};\n  }\n  if(action.type === 'INPUT_BLUR') {\n    return {value: state.value, isValid: state.value.includes('@')};\n  }\n  return { value: '' , isValid: false};\n};\n\nconst passwordReducer = (state, action) => {\n  if(action.type === 'USER_INPUT') {\n    return { value:action.val , isValid : action.val.trim().length > 6};\n  }\n  if(action.type === 'INPUT_BLUR') {\n    return {value: state.value, isValid: state.value.trim().length > 6};\n  }\n  return { value: '' , isValid: false};\n};\n\n\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {value: '' , isValid : null});\n  \n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {value: '' , isValid : null});\n\n  useEffect(() => {\n    console.log('EFFECT RUNNING');\n    return () => {\n      console.log('EFFECT CLEANUP !!!');\n    }\n  },[]);\n\n  const {isValid : emailIsValid} = emailState;\n  const {isValid: passwordIsValid} = passwordState;\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log('checking Form Availability !!');\n      setFormIsValid(\n        emailIsValid && passwordIsValid\n      );\n    },500);\n    return () => {\n      console.log('CLEANUP');\n      clearTimeout(identifier);\n    };\n  },[emailIsValid,passwordIsValid]);\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({type: 'USER_INPUT',val: event.target.value});\n    \n\n    setFormIsValid(\n      event.target.value.includes('@') && passwordState.isValid\n    );\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({type: 'USER_INPUT' , val : event.target.value});\n\n    setFormIsValid(\n      event.target.value.trim().length > 6 && emailState.value.isValid\n    );\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({type: 'INPUT_BLUR'});\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({type: 'INPUT_BLUR'});\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    authCtx.onLogin(emailState.value, passwordState.value);\n  };\n  const authCtx = useContext(AuthContext);\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            passwordState.isValid=== false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}